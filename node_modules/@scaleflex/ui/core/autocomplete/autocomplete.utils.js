import _extends from "@babel/runtime/helpers/extends";
import _typeof from "@babel/runtime/helpers/typeof";
import React from 'react';
import Label from '../label';
import FormHint from '../form-hint';
export var defaultGetOptionValue = function defaultGetOptionValue(option) {
  return (_typeof(option) === 'object' ? option.id : option) || '';
};
export var defaultGetOptionLabel = function defaultGetOptionLabel(option) {
  return (_typeof(option) === 'object' ? option.label : option) || '';
};
export var renderLabel = function renderLabel(_ref) {
  var label = _ref.label,
    error = _ref.error,
    size = _ref.size,
    LabelProps = _ref.LabelProps;
  if (label) {
    if (typeof label === 'function') {
      return label({
        error: error
      });
    }
    if (_typeof(label) === 'object') {
      return label;
    }
    return /*#__PURE__*/React.createElement(Label, _extends({
      size: size,
      error: error
    }, LabelProps || {}), label);
  }
  return null;
};
export var renderHint = function renderHint(_ref2) {
  var hint = _ref2.hint,
    error = _ref2.error,
    size = _ref2.size;
  if (hint) {
    if (typeof hint === 'function') {
      return hint({
        error: error
      });
    }
    if (_typeof(hint) === 'object') {
      return hint;
    }
    return /*#__PURE__*/React.createElement(FormHint, {
      size: size,
      error: error
    }, hint);
  }
  return null;
};