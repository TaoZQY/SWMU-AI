import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { css } from 'styled-components';
import { Color } from '../../utils/types/palette';
import { FontVariant as FV } from '../../utils/types/typography';
import { Size } from './types';
export var sizeTagFieldMixin = _defineProperty(_defineProperty({}, Size.Sm, css(["padding:12px;gap:8px;"])), Size.Md, css(["padding:16px;gap:16px;"]));
export var heightTagFieldMixin = _defineProperty(_defineProperty({}, Size.Sm, function () {
  return css(["min-height:80px;max-height:252px;"]);
}), Size.Md, function () {
  return css(["min-height:100px;max-height:260px;"]);
});
export var fontTagFieldMixin = _defineProperty(_defineProperty({}, Size.Sm, function (_ref) {
  var font = _ref.theme.typography.font;
  return css(["", ""], font[FV.InputMd]);
}), Size.Md, function (_ref2) {
  var font = _ref2.theme.typography.font;
  return css(["", ""], font[FV.InputLg]);
});
export var tagFieldBorder = function tagFieldBorder(_ref3) {
  var error = _ref3.error,
    palette = _ref3.theme.palette;
  if (error) {
    return css(["border:1px solid ", ";"], palette[Color.Error]);
  }
  return css(["border:1px solid ", ";&:focus-within{border:1px solid ", ";&:hover{border:1px solid ", ";}}&:hover{border:1px solid ", ";}"], palette[Color.BackgroundPrimaryStateless], palette[Color.AccentStateless], palette[Color.AccentStateless], palette[Color.BordersPrimaryHover]);
};