import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { css } from 'styled-components';
import { Color as PaletteColor } from '../../utils/types/palette';
import { FontVariant as FV } from '../../utils/types/typography';
import { Size, Type } from './types';
export var statusLabelMixin = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, Type.Default, function () {
  return css(["border:none;"]);
}), Type.Inactive, function () {
  return css(["border:none;"]);
}), Type.Received, function (_ref) {
  var palette = _ref.theme.palette;
  return css(["border:1px solid ", ";"], palette[PaletteColor.ButtonDisabledText]);
}), Type.Selected, function (_ref2) {
  var palette = _ref2.theme.palette;
  return css(["border:1px solid ", ";"], palette[PaletteColor.AccentStateless]);
}), Type.Modified, function (_ref3) {
  var palette = _ref3.theme.palette;
  return css(["background-color:", ";"], palette[PaletteColor.Modified]);
}), Type.Validated, function (_ref4) {
  var palette = _ref4.theme.palette;
  return css(["background-color:", ";"], palette[PaletteColor.Success]);
});
export var fontLabelMixin = _defineProperty(_defineProperty({}, Size.Sm, function (_ref5) {
  var font = _ref5.theme.typography.font;
  return font[FV.LabelSmall];
}), Size.Md, function (_ref6) {
  var font = _ref6.theme.typography.font;
  return font[FV.LabelMedium];
});