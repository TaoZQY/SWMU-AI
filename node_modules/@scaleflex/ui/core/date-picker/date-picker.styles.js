import styled, { css } from 'styled-components';
import { FontVariant } from '@scaleflex/ui/utils/types/typography';
import { Color as PColor } from '../../utils/types/palette';
import { generateClassNames, applyDisplayNames } from '../../utils/functions';
import InputGroup from '../input-group';
import IconButton from '../icon-button/icon-button.component';
var baseClassName = 'Date-picker';
var DatePicker = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-14tu7pc-0"
})(function (_ref) {
  var fullWidth = _ref.fullWidth;
  return css(["position:relative;width:", ";"], fullWidth ? '100%' : '300px');
});
var Placeholder = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'placeholder')
}).withConfig({
  componentId: "sc-14tu7pc-1"
})(function (_ref2) {
  var fullWidth = _ref2.fullWidth,
    theme = _ref2.theme,
    readOnly = _ref2.readOnly,
    disabled = _ref2.disabled,
    size = _ref2.size;
  return css(["position:absolute;top:", ";left:", ";width:", ";height:24px;", " color:", ";background:", ";pointer-events:", ";"], size === 'sm' ? '24px' : '32px', size === 'sm' ? '13px' : '18px', fullWidth ? '95%' : '244px', theme.typography.font[FontVariant.InputMd], theme.palette[PColor.TextPlaceholder], readOnly || disabled ? theme.palette[PColor.BackgroundHover] : theme.palette[PColor.BackgroundStateless], readOnly || disabled ? 'none' : 'all');
});
var DatePickerInput = /*#__PURE__*/styled(InputGroup).attrs({
  className: generateClassNames(baseClassName, 'input')
}).withConfig({
  componentId: "sc-14tu7pc-2"
})(function (_ref3) {
  var _ref3$isHovering = _ref3.isHovering,
    isHovering = _ref3$isHovering === void 0 ? false : _ref3$isHovering,
    theme = _ref3.theme;
  return css(["input[type='date']::-webkit-calendar-picker-indicator{display:none;-webkit-appearance:none;}.SfxInput-ClearIcon{display:none;}&:hover .SfxInput-ClearIcon,&:focus-within .SfxInput-ClearIcon{display:block;}", ""], isHovering && css(["border:1px solid ", ";"], theme.palette[PColor.BordersPrimaryHover]));
});
var DatePickerIconButton = /*#__PURE__*/styled(IconButton).attrs({
  className: generateClassNames(baseClassName, 'dropdown')
}).withConfig({
  componentId: "sc-14tu7pc-3"
})(["border:none;width:30px;height:30px;padding:0;z-index:1;"]);
var Styled = applyDisplayNames({
  DatePicker: DatePicker,
  DatePickerInput: DatePickerInput,
  Placeholder: Placeholder,
  DatePickerIconButton: DatePickerIconButton
});
export default Styled;