import styled, { css } from 'styled-components';
import { generateClassNames, applyDisplayNames } from '../../utils/functions';
import { InputSize } from '../../utils/types';
import { Color as PColor } from '../../utils/types/palette';
import { BorderRadiusSize as BRSize } from '../../utils/types/shape';
import { errorMixin, sizeTextAreaMixin, heightTextAreaMixin } from './textarea.mixin';
import { getInputBackgroundColor, getInputTextColor, getInputBorderColor } from '../input/input.utils';
var baseClassName = 'Textarea';
var Textarea = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-1usif6k-0"
})(function (_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? InputSize.Md : _ref$size,
    _ref$error = _ref.error,
    error = _ref$error === void 0 ? false : _ref$error,
    _ref$fullWidth = _ref.fullWidth,
    fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,
    _ref$readOnly = _ref.readOnly,
    readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$autoSize = _ref.autoSize,
    autoSize = _ref$autoSize === void 0 ? false : _ref$autoSize,
    theme = _ref.theme;
  return css(["position:relative;display:inline-flex;flex-direction:column;align-items:flex-end;justify-content:space-between;cursor:text;box-sizing:border-box;transition:all 100ms ease-out;width:", ";pointer-events:", ";background-color:", ";border-radius:", ";border:1px solid ", ";color:", ";", " ", " &:hover{color:", ";}", " ", ""], fullWidth ? '100%' : '300px', disabled ? 'none' : 'auto', getInputBackgroundColor(readOnly, disabled), theme.shape.borderRadius[BRSize.Md], getInputBorderColor(readOnly, disabled), disabled ? theme.palette[PColor.TextPlaceholder] : theme.palette[PColor.TextPrimary], heightTextAreaMixin[size], !readOnly && !disabled && css(["&:focus-within{background-color:", "!important;border:1px solid ", ";&:hover{border:1px solid ", ";}}&:hover{background-color:", ";border:1px solid ", ";}"], theme.palette[PColor.BackgroundSecondary], theme.palette[PColor.AccentStateless], theme.palette[PColor.AccentStateless], theme.palette[PColor.BackgroundStateless], theme.palette[PColor.BordersPrimaryHover]), getInputTextColor(readOnly, disabled), error && errorMixin, autoSize && css(["width:auto;height:auto;"]));
});
var Base = /*#__PURE__*/styled.textarea.attrs({
  className: generateClassNames(baseClassName, 'Base')
}).withConfig({
  componentId: "sc-1usif6k-1"
})(function (_ref2) {
  var palette = _ref2.theme.palette,
    _ref2$readOnly = _ref2.readOnly,
    readOnly = _ref2$readOnly === void 0 ? false : _ref2$readOnly,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? InputSize.Md : _ref2$size;
  return css(["display:block;width:100%;height:100%;color:inherit;outline:none;resize:none;min-width:0;margin:0;padding:0;border:0;background-color:transparent;outline:none;font-size:inherit;line-height:inherit;color:inherit;font-weight:inherit;font-family:inherit;box-sizing:border-box;flex:1;", " ", ";&::placeholder{color:", ";}::-webkit-scrollbar{width:12px;}::-webkit-scrollbar-track{width:8px;}::-webkit-scrollbar-thumb{background:", ";border-radius:8px;border:4px solid ", ";}"], readOnly && "padding-bottom: 0px;", sizeTextAreaMixin[size], palette[PColor.TextPlaceholder], palette[PColor.BorderPrimaryStateless], palette[PColor.BackgroundStateless]);
});
var ActionsButtonsWrapper = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'ActionsButtonsWrapper')
}).withConfig({
  componentId: "sc-1usif6k-2"
})(function (_ref3) {
  var _ref3$size = _ref3.size,
    size = _ref3$size === void 0 ? InputSize.Md : _ref3$size;
  return css(["display:flex;align-items:center;width:100%;column-gap:12px;box-sizing:border-box;", ";.SfxButton-Label{font-weight:500;}"], sizeTextAreaMixin[size]);
});
var CopyIcon = /*#__PURE__*/styled.span.attrs({
  className: generateClassNames(baseClassName, 'CopyIcon')
}).withConfig({
  componentId: "sc-1usif6k-3"
})(function (_ref4) {
  var palette = _ref4.theme.palette;
  return css(["cursor:pointer;color:", ";margin-left:auto;"], palette[PColor.IconsPrimary]);
});
var Styled = applyDisplayNames({
  Textarea: Textarea,
  CopyIcon: CopyIcon,
  Base: Base,
  ActionsButtonsWrapper: ActionsButtonsWrapper
});
export default Styled;