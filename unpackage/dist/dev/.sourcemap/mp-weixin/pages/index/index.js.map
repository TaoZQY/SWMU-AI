{"version":3,"sources":["uni-app:///main.js",null,"webpack:///D:/小程序项目/SWMU/SWMU-app/pages/index/index.vue?514a","webpack:///D:/小程序项目/SWMU/SWMU-app/pages/index/index.vue?162f","webpack:///D:/小程序项目/SWMU/SWMU-app/pages/index/index.vue?454e","uni-app:///pages/index/index.vue","webpack:///D:/小程序项目/SWMU/SWMU-app/pages/index/index.vue?6413","webpack:///D:/小程序项目/SWMU/SWMU-app/pages/index/index.vue?d526"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","onLoad","uni","data","images","canvasWidth","canvasHeight","solutionTypes","selectedSolutionType","concentrationColor","isDrawing","startX","startY","endX","endY","methods","onSolutionTypeChange","uploadImage","title","icon","count","sizeType","sourceType","success","imageUrl","rgbInfo","canvasId","src","fail","console","drawImageAndCalculateRGB","ctx","resetDrawingData","startDrawing","drawRectangle","endDrawing","calculateRGBInRectangle","x","y","width","height","g","b","r","calculateConcentration","deleteImage","saveImageInfo","image"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,cAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8H;AAC9H;AACyD;AACL;AACqC;;;AAGzF;AACgM;AAChM,gBAAgB,uMAAU;AAC1B,EAAE,2EAAM;AACR,EAAE,4FAAM;AACR,EAAE,qGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,gGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAmvB,CAAgB,ivBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC6CvwB;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MAAA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACAC;MACA;IACA;IACAC;MAAA;MACA;QACAf;UACAgB;UACAC;QACA;QACA;MACA;MACAjB;QACAkB;QAAA;QACAC;QACAC;QACAC;UACA;YAAA;cACAC;cACAnB;cACAC;cACAmB;cACAC;YACA;UAAA;UACA;YACA;cACAxB;gBACAyB;gBACAJ;kBACA;gBACA;gBACAK;kBACAC;gBACA;cACA;YACA;UACA;QACA;QACAD;UACAC;QACA;MACA;IACA;IACAC;MAAA;MACAD;MACA;MACA;MACA;MACA;MACAA;MACA;MACA;MACAE,oGACAzB;MACAyB;MACAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACAH;MACAA,oGACAzB;MACAyB;MACAA;MACAA;IACA;IACAI;MACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;MACAP;MACAA;MACA3B;QACAwB;QACAW;QACAC;QACAC;QACAC;QACAjB;UACA;UACA;YACAkB;YACAC;UACA;UACA;YACA;cACA;gBACAC;gBACAF;gBACAC;cACA;gBACAC;gBACAF;gBACAC;cACA;YACA;UACA;UACA;UACAC;UACAF;UACAC;UACA;UACA;UACA;UACA;UACA;YACAC;YACAF;YACAC;UACA;UACA;QACA;QACAd;UACAC;QACA;MACA;IACA;IACAe;MACAf;MACA;MACA;QACA;UACA;YACAS;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;;UACA;QACA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;;UACA;QACA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;;UACA;QACA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;;UACA;QACA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;YACAA;UACA;;UACA;QACA;UACAA;MAAA;MAEA;IACA;IACAO;MACA;IACA;IACAC;MACA;QACA,gCACAC;QACA7C;UACAC;UACAoB;YACArB;cACAgB;cACAC;YACA;UACA;QACA;MACA;QACAjB;UACAgB;UACAC;QACA;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;;ACxVA;AAAA;AAAA;AAAA;AAAwlC,CAAgB,kjCAAG,EAAC,C;;;;;;;;;;;ACA5mC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/index/index.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/index/index.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=57280228&scoped=true&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=57280228&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"57280228\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/index/index.vue\"\nexport default component.exports","export * from \"-!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=template&id=57280228&scoped=true&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"","<template>\r\n  <view class=\"container\">\r\n    <!-- 选择溶液类型的下拉框 -->\r\n    <picker mode=\"selector\" :range=\"solutionTypes\" @change=\"onSolutionTypeChange\">\r\n      <view class=\"picker\">\r\n        CHOOSE SOLVENTS: {{ selectedSolutionType }}\r\n      </view>\r\n    </picker>\r\n    <!-- 显示图片和RGB信息 -->\r\n    <view class=\"images-container\">\r\n      <view v-for=\"(image, index) in images\" :key=\"index\" class=\"image-wrapper\">\r\n        <!-- 隐藏的canvas，用于获取RGB数据 -->\r\n        <canvas :canvas-id=\"'canvas' + index\"\r\n          :style=\"{ width: image.canvasWidth + 'px', height: image.canvasHeight + 'px' }\"\r\n          @touchstart=\"startDrawing($event, index)\" @touchmove=\"drawRectangle($event, index)\"\r\n          @touchend=\"endDrawing(index)\">\r\n        </canvas>\r\n        <!-- 操作按钮 -->\r\n        <view class=\"action-buttons\">\r\n          <button class=\"action-button delete-button\" @click=\"deleteImage(index)\">×</button>\r\n          <button class=\"action-button save-button\" @click=\"saveImageInfo(image)\">&#x1F4BE;</button>\r\n        </view>\r\n        <!-- 显示RGB信息 -->\r\n        <view v-if=\"image.rgbInfo\" class=\"rgb-info\">\r\n          <!-- RGB 信息上下排列并居中 -->\r\n          <view class=\"rgb-values\">\r\n            <text style=\"color: red\">R: {{ image.rgbInfo.r }}</text>\r\n            <text style=\"color: green\">G: {{ image.rgbInfo.g }}</text>\r\n            <text style=\"color: blue\">B: {{ image.rgbInfo.b }}</text>\r\n          </view>\r\n\r\n          <!-- 水分信息 -->\r\n          <view class=\"fraction-value\">\r\n            <text :style=\"{ color: concentrationColor }\">WATER FRACTION: {{ image.concentration }}</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    <!-- 上传按钮 -->\r\n    <button class=\"upload-button\" type=\"primary\" @click=\"uploadImage\">DETECT</button>\r\n\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    onLoad() {\r\n      uni.setLocale('en');\r\n    },\r\n    data() {\r\n      return {\r\n        images: [], // 存储选择的图片路径和RGB信息\r\n        canvasWidth: 200,\r\n        canvasHeight: 200,\r\n        solutionTypes: ['NPA', 'ACN', 'EtOH', 'IPA', 'THF'],\r\n        selectedSolutionType: '',\r\n        concentrationColor: '#FF4500',\r\n        isDrawing: false, // 是否正在绘制矩形框\r\n        startX: 0, // 矩形框起始点X坐标\r\n        startY: 0, // 矩形框起始点Y坐标\r\n        endX: 0, // 矩形框结束点X坐标\r\n        endY: 0 // 矩形框结束点Y坐标\r\n      };\r\n    },\r\n    methods: {\r\n      onSolutionTypeChange(e) {\r\n        this.selectedSolutionType = this.solutionTypes[e.detail.value];\r\n      },\r\n      uploadImage() {\r\n        if (!this.selectedSolutionType) {\r\n          uni.showToast({\r\n            title: 'Please select the solution first',\r\n            icon: 'none'\r\n          });\r\n          return;\r\n        }\r\n        uni.chooseImage({\r\n          count: 4, // 支持多张图片上传\r\n          sizeType: ['original', 'compressed'],\r\n          sourceType: ['album', 'camera'],\r\n          success: (res) => {\r\n            this.images = res.tempFilePaths.map((filePath, index) => ({\r\n              imageUrl: filePath,\r\n              canvasWidth: 200,\r\n              canvasHeight: 200,\r\n              rgbInfo: null,\r\n              canvasId: 'canvas' + index\r\n            }));\r\n            this.$nextTick(() => {\r\n              this.images.forEach((image, index) => {\r\n                uni.getImageInfo({\r\n                  src: image.imageUrl,\r\n                  success: (imgInfo) => {\r\n                    this.drawImageAndCalculateRGB(imgInfo.width, imgInfo.height, index);\r\n                  },\r\n                  fail: (err) => {\r\n                    console.error('获取图片信息失败', err);\r\n                  }\r\n                });\r\n              });\r\n            });\r\n          },\r\n          fail: (err) => {\r\n            console.error('选择图片失败', err);\r\n          }\r\n        });\r\n      },\r\n      drawImageAndCalculateRGB(imgWidth, imgHeight, index) {\r\n        console.log(\"图片宽高\", imgWidth, imgHeight)\r\n        // 保持图片比例缩放\r\n        let scale = Math.min(this.canvasWidth / imgWidth, this.canvasHeight / imgHeight);\r\n        this.images[index].canvasWidth = Math.round(imgWidth * scale);\r\n        this.images[index].canvasHeight = Math.round(imgHeight * scale);\r\n        console.log(\"Canvas宽高\", this.images[index].canvasWidth, this.images[index].canvasHeight)\r\n        const ctx = uni.createCanvasContext(this.images[index].canvasId, this);\r\n        // 绘制图片到canvas\r\n        ctx.drawImage(this.images[index].imageUrl, 0, 0, this.images[index].canvasWidth, this.images[index]\r\n          .canvasHeight);\r\n        ctx.save()\r\n        ctx.draw(true, () => {\r\n          // 初始化canvas触摸事件\r\n          this.resetDrawingData();\r\n          // 获取图像数据\r\n          // uni.canvasGetImageData({\r\n          //   canvasId: this.images[index].canvasId,\r\n          //   x: 0,\r\n          //   y: 0,\r\n          //   width: this.images[index].canvasWidth,\r\n          //   height: this.images[index].canvasHeight,\r\n          //   success: (res) => {\r\n          //     let data = res.data;\r\n          //     let r = 1,\r\n          //       g = 1,\r\n          //       b = 1;\r\n          //     // 获取所有像素的累加值\r\n          //     for (let row = 0; row < this.images[index].canvasHeight; row++) {\r\n          //       for (let col = 0; col < this.images[index].canvasWidth; col++) {\r\n          //         if (row == 0) {\r\n          //           r += data[this.images[index].canvasWidth * row + col];\r\n          //           g += data[this.images[index].canvasWidth * row + col + 1];\r\n          //           b += data[this.images[index].canvasWidth * row + col + 2];\r\n          //         } else {\r\n          //           r += data[(this.images[index].canvasWidth * row + col) * 4];\r\n          //           g += data[(this.images[index].canvasWidth * row + col) * 4 + 1];\r\n          //           b += data[(this.images[index].canvasWidth * row + col) * 4 + 2];\r\n          //         }\r\n          //       }\r\n          //     }\r\n          //     // 求rgb平均值\r\n          //     const totalPixels = this.images[index].canvasWidth * this.images[index].canvasHeight;\r\n          //     r = Math.round(r / totalPixels);\r\n          //     g = Math.round(g / totalPixels);\r\n          //     b = Math.round(b / totalPixels);\r\n          //     console.log(\"rgb\", r, g, b)\r\n\r\n          //     const rgbSum = r + g + b;\r\n          //     const x = rgbSum / g;\r\n          //     const concentration = this.calculateConcentration(x, this.selectedSolutionType);\r\n          //     this.$set(this.images[index], 'rgbInfo', {\r\n          //       r: r,\r\n          //       g: g,\r\n          //       b: b\r\n          //     });\r\n          //     this.$set(this.images[index], 'concentration', concentration);\r\n          //   },\r\n          //   fail: (err) => {\r\n          //     console.error('获取RGB信息失败', err);\r\n          //   }\r\n          // });\r\n        });\r\n      },\r\n      resetDrawingData() {\r\n        this.isDrawing = false;\r\n        this.startX = 0;\r\n        this.startY = 0;\r\n        this.endX = 0;\r\n        this.endY = 0;\r\n      },\r\n      startDrawing(e, index) {\r\n        const touch = e.touches[0];\r\n        this.startX = touch.x;\r\n        this.startY = touch.y;\r\n        this.isDrawing = true;\r\n      },\r\n      drawRectangle(e, index) {\r\n        if (!this.isDrawing) return;\r\n        const touch = e.touches[0];\r\n        this.endX = touch.x;\r\n        this.endY = touch.y;\r\n        const ctx = uni.createCanvasContext(this.images[index].canvasId, this);\r\n        // 重新绘制图片\r\n        ctx.clearRect(0, 0, this.images[index].canvasWidth, this.images[index].canvasHeight);\r\n        ctx.drawImage(this.images[index].imageUrl, 0, 0, this.images[index].canvasWidth, this.images[index]\r\n          .canvasHeight);\r\n        ctx.setStrokeStyle('#000000');\r\n        ctx.strokeRect(this.startX, this.startY, this.endX - this.startX, this.endY - this.startY);\r\n        ctx.draw(true);\r\n      },\r\n      endDrawing(index) {\r\n        this.isDrawing = false;\r\n        if (this.startX !== this.endX && this.startY !== this.endY) {\r\n          this.calculateRGBInRectangle(index);\r\n        }\r\n      },\r\n      calculateRGBInRectangle(index) {\r\n        const x = Math.min(this.startX, this.endX);\r\n        const y = Math.min(this.startY, this.endY);\r\n        const width = Math.round(Math.abs(this.endX - this.startX));\r\n        const height = Math.round(Math.abs(this.endY - this.startY));\r\n        console.log(\"width\", width)\r\n        console.log(\"height\", height)\r\n        uni.canvasGetImageData({\r\n          canvasId: this.images[index].canvasId,\r\n          x: x,\r\n          y: y,\r\n          width: width,\r\n          height: height,\r\n          success: (res) => {\r\n            let data = res.data;\r\n            let r = 0,\r\n              g = 0,\r\n              b = 0;\r\n            //获取所有像素的累加值\r\n            for (let row = 0; row < height; row++) {\r\n              for (let col = 0; col < width; col++) {\r\n                if (row == 0) {\r\n                  r += data[width * row + col];\r\n                  g += data[width * row + col + 1];\r\n                  b += data[width * row + col + 2];\r\n                } else {\r\n                  r += data[(width * row + col) * 4];\r\n                  g += data[(width * row + col) * 4 + 1];\r\n                  b += data[(width * row + col) * 4 + 2];\r\n                }\r\n              }\r\n            }\r\n            const pixelCount = (width - 2) * (height - 2); // 除去边框的像素数\r\n            r = Math.min(255, Math.max(0, Math.round(r / pixelCount)));\r\n            g = Math.min(255, Math.max(0, Math.round(g / pixelCount)));\r\n            b = Math.min(255, Math.max(0, Math.round(b / pixelCount)));\r\n            // const rgbSum = r + g + b;\r\n            // const xRatio = rgbSum / g;\r\n            const x_input = g / r;\r\n            const concentration = this.calculateConcentration(x_input, this.selectedSolutionType);\r\n            this.$set(this.images[index], 'rgbInfo', {\r\n              r,\r\n              g,\r\n              b\r\n            });\r\n            this.$set(this.images[index], 'concentration', concentration);\r\n          },\r\n          fail: (err) => {\r\n            console.error('Fail getting RGB Info', err);\r\n          }\r\n        });\r\n      },\r\n      calculateConcentration(x, solutionType) {\r\n        console.log(\"x--->\", x)\r\n        let y;\r\n        switch (solutionType) {\r\n          case 'NPA':\r\n            if (x >= 0.615686 && x <= 0.868421) {\r\n              y = 39.993 * x - 25.003;\r\n            } else if (x >= 0.868421 && x <= 1.175115) {\r\n              y = 276.23 * x - 228.93;\r\n            } else if (x >= 1.175115 && x <= 1.268657) {\r\n              y = 104.47 * x - 33.054;\r\n            } else {\r\n              y = 0; // x不在已知范围内\r\n            }\r\n            break;\r\n          case 'ACN':\r\n            if (x >= 0.219608 && x <= 0.893443) {\r\n              y = 14.866 * x - 4.1174;\r\n            } else if (x >= 0.893443 && x <= 1.328125) {\r\n              y = 157.99 * x - 136.41;\r\n            } else if (x >= 1.328125 && x <= 1.344778) {\r\n              y = 1170.4 * x - 1473.7;\r\n            } else {\r\n              y = 0; // x不在已知范围内\r\n            }\r\n            break;\r\n          case 'EtOH':\r\n            if (x >= 0.329412 && x <= 0.704516) {\r\n              y = 27.286 * x - 9.2752;\r\n            } else if (x >= 0.704516 && x <= 1.356878) {\r\n              y = 118.06 * x - 70.057;\r\n            } else if (x >= 1.356878 && x <= 1.37615) {\r\n              y = 382.16 * x - 426.41;\r\n            } else {\r\n              y = 0; // x不在已知范围内\r\n            }\r\n            break;\r\n          case 'IPA':\r\n            if (x >= 0.626016 && x <= 0.978632) {\r\n              y = 27.612 * x - 18.16;\r\n            } else if (x >= 0.978632 && x <= 1.287554) {\r\n              y = 256.7 * x - 237.93;\r\n            } else if (x >= 1.287554 && x <= 1.335287) {\r\n              y = 208.36 * x - 178.42;\r\n            } else {\r\n              y = 0; // x不在已知范围内\r\n            }\r\n            break;\r\n          case 'THF':\r\n            if (x >= 0 && x <= 0.055336) {\r\n              y = 175.32 * x + 0.3653;\r\n            } else if (x >= 0.958549 && x <= 1.023075) {\r\n              y = 790.88 * x - 729.34;\r\n            } else if (x >= 1.220096 && x <= 1.301234) {\r\n              y = 116.26 * x - 51.52;\r\n            } else {\r\n              y = 0; // x不在已知范围内\r\n            }\r\n            break;\r\n          default:\r\n            y = 0;\r\n        }\r\n        return `${y.toFixed(2)}%`;\r\n      },\r\n      deleteImage(index) {\r\n        this.images.splice(index, 1);\r\n      },\r\n      saveImageInfo(image) {\r\n        if (image.rgbInfo) {\r\n          const info =\r\n            `Image URL: ${image.imageUrl}\\nR: ${image.rgbInfo.r}\\nG: ${image.rgbInfo.g}\\nB: ${image.rgbInfo.b}\\n浓度: ${image.concentration}`;\r\n          uni.setClipboardData({\r\n            data: info,\r\n            success: () => {\r\n              uni.showToast({\r\n                title: 'Information Saved',\r\n                icon: 'success'\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          uni.showToast({\r\n            title: 'No RGB Info',\r\n            icon: 'none'\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  /* 页面容器样式 */\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    /* 使内容垂直居中 */\r\n    height: 100vh;\r\n    /* 占满视口高度 */\r\n    padding: 20px;\r\n    /* 根据需要调整内边距 */\r\n    box-sizing: border-box;\r\n    /* 让 padding 影响到总宽度和高度 */\r\n    /* 将容器从底部上移到屏幕中央 */\r\n  }\r\n\r\n  /* 上传按钮样式 */\r\n  .upload-button {\r\n    margin-bottom: 20px;\r\n    padding: 10px 20px;\r\n    background-color: #007aff;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n\r\n  /* 图片和RGB信息容器样式 */\r\n  .images-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n    /* Enable vertical scrolling */\r\n    overflow-x: hidden;\r\n    /* Prevent horizontal scrolling */\r\n    max-height: calc(100vh - 100px);\r\n    /* Adjust the max height to prevent overflow */\r\n  }\r\n\r\n  /* 单张图片容器样式 */\r\n  .image-wrapper {\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n    position: relative;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    max-width: 100%;\r\n    /* Ensure the wrapper doesn't exceed container width */\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    /* Center content horizontally */\r\n  }\r\n\r\n  /* 操作按钮容器样式 */\r\n  .action-buttons {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n  }\r\n\r\n  /* 操作按钮样式 */\r\n  .action-button {\r\n    margin-bottom: 5px;\r\n    background: none;\r\n    border: none;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    color: #333;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n    width: 35px;\r\n    height: 35px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  .delete-button {\r\n    color: #ff4d4f;\r\n  }\r\n\r\n  .save-button {\r\n    color: #52c41a;\r\n  }\r\n\r\n  /* RGB 信息和 Water Fraction 样式 */\r\n  .rgb-info {\r\n    margin-top: 10px;\r\n    font-size: 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  /* RGB 值上下排列并居中 */\r\n  .rgb-values {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  /* Water Fraction 样式 */\r\n  .fraction-value {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  /* 选择溶液类型样式 */\r\n  .picker {\r\n    margin: 20px;\r\n    padding: 15px 20px;\r\n    background-color: #ffffff;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: #ff3503;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\r\n  }\r\n</style>\n","import mod from \"-!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&id=57280228&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&id=57280228&scoped=true&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1727015890459\n      var cssReload = require(\"D:/HBuilderX.3.6.14.20221215/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}